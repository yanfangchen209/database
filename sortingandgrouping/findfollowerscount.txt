Table: Followers

+-------------+------+
| Column Name | Type |
+-------------+------+
| user_id     | int  |
| follower_id | int  |
+-------------+------+
(user_id, follower_id) is the primary key for this table.
This table contains the IDs of a user and a follower in a social media app where the follower follows the user.
 

Write an SQL query that will, for each user, return the number of followers.

Return the result table ordered by user_id in ascending order.

The query result format is in the following example.

 

Example 1:

Input: 
Followers table:
+---------+-------------+
| user_id | follower_id |
+---------+-------------+
| 0       | 1           |
| 1       | 0           |
| 2       | 0           |
| 2       | 1           |
+---------+-------------+
Output: 
+---------+----------------+
| user_id | followers_count|
+---------+----------------+
| 0       | 1              |
| 1       | 1              |
| 2       | 2              |
+---------+----------------+
Explanation: 
The followers of 0 are {1}
The followers of 1 are {0}
The followers of 2 are {0,1}


Oracle solution:

Algorithm

SELECT user_id, COUNT(user_id) AS followers_count: This part specifies the columns to be selected in the result set. 
Here, we want to retrieve the user_id and the count of followers for each user. The COUNT(user_id) function is used 
to count the number of rows in the followers table, which represents the number of followers for a particular user. 
The result of this count is aliased as followers_count to match the output requirements of the problem.

FROM followers: This part specifies the table from which the data is being retrieved.

GROUP BY user_id: This part groups the rows based on the user_id column. By using GROUP BY, the query will calculate 
the count of followers for each unique user_id. The result set will have one row for each unique user_id.

ORDER BY user_id ASC: This part orders the result set based on the user_id column in ascending order. ASC stands for 
ascending. Please note, the default ordering done by the ORDER BY clause is ascending. So removing ASC from the query 
will also work.

------------------------------------------------------
select user_id, count(user_id) as followers_count
from followers
group by user_id
order by user_id;